name: Deploy to Cloudflare Workers

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - main
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Cloudflare Workers
    permissions:
      contents: read
      deployments: write
      pull-requests: write
    environment:
      name: ${{ (github.ref == 'refs/heads/main' && 'production') || 'development' }}

    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm run build
        env:
          # PUBLIC_* variables - embedded in the client bundle
          PUBLIC_CONVEX_URL: ${{ vars.PUBLIC_CONVEX_URL }}
          PUBLIC_CONVEX_SITE_URL: ${{ vars.PUBLIC_CONVEX_SITE_URL }}
          # SITE_URL - required for build (imported from $env/static/private)
          SITE_URL: ${{ vars.SITE_URL || 'https://modernstack-saas.com' }}

      - name: Deploy to Cloudflare Workers
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: ${{ github.ref == 'refs/heads/main' && 'deploy --config wrangler.jsonc' || format('versions upload --config wrangler.jsonc --tag {0} --message "Deploy from {1}"', github.run_id, github.ref) }}
          secrets: |
            SITE_URL
            BETTER_AUTH_SECRET
            BETTER_AUTH_URL
        env:
          SITE_URL: ${{ vars.SITE_URL || 'https://modernstack-saas.com' }}
          BETTER_AUTH_SECRET: ${{ secrets.BETTER_AUTH_SECRET }}
          BETTER_AUTH_URL: ${{ vars.BETTER_AUTH_URL || vars.SITE_URL || 'https://modernstack-saas.com' }}

      - name: Add PR Comment with Worker URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issueNumber = context.issue.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const marker = '<!-- worker-deploy-comment -->';
            const branch = process.env.GITHUB_HEAD_REF || process.env.GITHUB_REF_NAME;
            const runId = '${{ github.run_id }}';
            const sha = '${{ github.sha }}';

            // Get the actual deployment URL from wrangler-action output
            const deploymentUrl = '${{ steps.deploy.outputs.deployment-url }}';
            const productionUrl = 'https://modernstack-saas.workers.dev';

            const commentBody = `${marker}
            🚀 **Cloudflare Workers deployment ready!**

            🔗 **Deployment URL**: ${deploymentUrl || productionUrl}
            📝 **Commit**: ${sha.substring(0, 8)}
            🌿 **Branch**: ${branch}

            ${branch === 'main' ? '✅ Production deployment' : '⚠️ Development deployment'}`;

            // Find the existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner,
              repo,
              issue_number: issueNumber,
            });
            const existingComment = comments.find(comment => comment.body.includes(marker));

            if (existingComment) {
              // Update the existing comment
              console.log(`Updating existing deployment comment (ID: ${existingComment.id})`);
              await github.rest.issues.updateComment({
                owner,
                repo,
                comment_id: existingComment.id,
                body: commentBody
              });
            } else {
              // Create a new comment
              console.log('Creating new deployment comment.');
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: issueNumber,
                body: commentBody
              });
            }
